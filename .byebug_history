exit
User.last.vip?
user.vip?
exit
User.last.vip?
User.last.vip!
user.vip?
user.vip!
user.vip = true
user.vip = 
current_user
User.last.vip?
user.vip?
user.admin?
User.last
User.last.role
user.save
user.role
user.role = :vip
user.role :vip
User.last.role
User.last
user.persisted?
user.role
user
page.has_content?('Access Denied')
post
exit
page.has_content? 'Access Denied'
page.has_content? 'Update Post'
page.has_content? 'Content'
page.has_content? 'content'
page.has_content? 'contents'
expect(page).to have_content 'contents'
expect(page).to have_content 'content'
page.has_content?('denied')
page.has_content?('access')
page.has_content?('access denied.')
page.find_button('Update Post')
page.find_button
page.content
page.has_content?('test')
page.has_content?('Content')
page.has_content?('content')
page.has_content?
page.title
page.methods
page.local_methods
page.methdos
page.content
page
exit
User.find(params[:id])
Post.find(params[:id])
params
c
Post.find(params[:id])
@post
